[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tf-mcp-server"
version = "0.1.0"
description = "Azure Terraform MCP Server - A comprehensive Model Context Protocol server for Azure Terraform operations"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "Azure Terraform MCP Team", email = "support@example.com"}
]
license = {text = "MIT"}
keywords = ["azure", "terraform", "mcp", "infrastructure", "iac"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
]
dependencies = [
    "fastmcp>=2.10.2",
    "httpx>=0.28.1",
    "pydantic>=2.0.0",
    "beautifulsoup4>=4.12.0",
    "asyncio-throttle>=1.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/example/tf-mcp-server"
Repository = "https://github.com/example/tf-mcp-server"
Documentation = "https://github.com/example/tf-mcp-server/blob/main/README.md"
"Bug Tracker" = "https://github.com/example/tf-mcp-server/issues"

[project.scripts]
tf-mcp-server = "src.__main__:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"src" = ["data/*.json"]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"
